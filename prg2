
#include<bits/stdc++.h>
#include<GL/glut.h>
using namespace std;

int m;

float v[4][3]={{0,0,1},{0,1,0},{1,-1,0},{-1,-1,0}};

void triangle(float a[3],float b[3],float c[3])
{
       glBegin(GL_TRIANGLES);
       glVertex3fv(a);
       glVertex3fv(b);
       glVertex3fv(c);
       glEnd();
}

void div(float a[3],float b[3],float c[3],int m)
{
    float v1[3],v2[3],v3[3];

     if(m>0)
     {
         for(int i=0;i<3;i++)
         {
             v1[i]=(a[i]+b[i])/2;
             v2[i]=(a[i]+c[i])/2;
             v3[i]=(c[i]+b[i])/2;
         }
         div(a,v1,v2,m-1);
         div(b,v2,v3,m-1);
         div(c,v3,v1,m-1);

     }
     else
        triangle(a,b,c);
}

void tetra(int m)
{
    glColor3f(0,0,0);
    div(v[1],v[2],v[3],m);

    glColor3f(0,1,0);
    div(v[0],v[1],v[3],m);

    glColor3f(1,0,0);
    div(v[0],v[2],v[3],m);

    glColor3f(0,0,1);
    div(v[0],v[1],v[2],m);
}

void display()
{
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
    glColor3f(0,1,0);
    tetra(m);
    glFlush();
}

void myinit()
{

    glMatrixMode(GL_PROJECTION);
    glOrtho(-2,2,-2,2,-2,2);
    glMatrixMode(GL_MODELVIEW);
    glPointSize(4.0);
}



int main(int argc,char** argv)
{
    cin>>m;
    glutInit(&argc,argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB |GLUT_DEPTH);
    glutInitWindowSize(500,500);
    glutInitWindowPosition(0,0);
    glutCreateWindow("sierpishi-gascut");
    myinit();
    glutDisplayFunc(display);
    glEnable(GL_DEPTH_TEST);
    glutMainLoop();
    return 0;
}
